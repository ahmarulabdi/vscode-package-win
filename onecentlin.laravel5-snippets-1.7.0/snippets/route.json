{
    "Route-any.sublime-snippet": {
        "prefix": "Route::any",
        "body": [
            "Route::any('${2:users/{id\\}}', function (${3:\\$id}) {",
            "    $4",
            "});"
        ],
        "description": "Basic Route with Closure."
    },
    "Route-closure.sublime-snippet": {
        "prefix": "Route::closure",
        "body": [
            "Route::${1:get}('${2:users/{id\\}}', function (${3:\\$id}) {",
            "    $4",
            "});"
        ],
        "description": "Basic Route with Closure."
    },
    "Route-controller.sublime-snippet": {
        "prefix": "Route::controller",
        "body": [
            "Route::controller('${1:users}', '${2:UserController}');"
        ],
        "description": "Route a controller to a URI with wildcard routing."
    },
    "Route-controllerAction.sublime-snippet": {
        "prefix": "Route::controllerAction",
        "body": [
            "Route::${1:get}('${2:users/{id\\}}', '${3:$UserController@profile}');"
        ],
        "description": "Basic route to a controller action."
    },
    "Route-currentRouteAction.sublime-snippet": {
        "prefix": "Route::currentRouteAction",
        "body": [
            "Route::currentRouteAction();"
        ],
        "description": "Get the current route name."
    },
    "Route-delete.sublime-snippet": {
        "prefix": "Route::delete",
        "body": [
            "Route::delete('${1:users/{id\\}}', function (${2:\\$id}) {",
            "    $3",
            "});"
        ],
        "description": "Basic Delete Route."
    },
    "Route-get.sublime-snippet": {
        "prefix": "Route::get",
        "body": [
            "Route::get('${1:users/{id\\}}', function (${2:\\$id}) {",
            "    $3",
            "});"
        ],
        "description": "Basic Get Route."
    },
    "Router-post.sublime-snippet": {
        "prefix": "Route::post",
        "body": [
            "Route::post('${1:users/{id\\}}', function (${2:\\$id}) {",
            "    $3",
            "});"
        ],
        "description": "Basic Post Route."
    },
    "Route-group.sublime-snippet": {
        "prefix": "Route::group",
        "body": [
            "Route::group(${1:['${2:prefix}' => '${3:admin}']}, function () {",
            "    $4",
            "});"
        ],
        "description": "Create a Group of Routes"
    },
    "Route-group-middleware": {
        "prefix": "Route::group-middleware",
        "body": [
            "Route::group(['middleware' => ['${1:groupName}']], function () {",
            "    $2",
            "});"
        ],
        "description": "Create a Group of Routers with middleware defined in RouteServiceProvider"
    },
    "Route-match.sublime-snippet": {
        "prefix": "Route::match",
        "body": [
            "Route::match([${1:'get', 'post'}], '${2:/user/profile}', function () {",
            "    $3",
            "});"
        ],
        "description": "Register a new route with the given verbs."
    },
    "Route-put.sublime-snippet": {
        "prefix": "Route::put",
        "body": [
            "Route::put('${1:users/{id\\}}', function (${2:\\$id}) {",
            "    $3",
            "});"
        ],
        "description": "Basic Put Route."
    },
    "Route-resource.sublime-snippet": {
        "prefix": "Route::resource",
        "body": [
            "Route::resource('${1:user}', '${2:UserController}');"
        ],
        "description": "Route to a RESTful Controller"
    },
    "Route-when.sublime-snippet": {
        "prefix": "Route::when",
        "body": [
            "\\$router->when('${1:admin/*}', '${2:admin}', ${3:['post']})$4"
        ],
        "description": "Pattern based filters on routes"
    },
    "Router-model.sublime-snippet": {
        "prefix": "Route::model",
        "body": [
            "\\$router->model('${1:user}', '${2:App\\User}')$3"
        ],
        "description": "Register a model binder for a wildcard."
    },
    "Router-pattern.sublime-snippet": {
        "prefix": "Route::pattern",
        "body": [
            "\\$router->pattern('${1:id}', '${2:[0-9]+}')$3"
        ],
        "description": "Set a global where pattern on all routes."
    },
    "Route-redirect": {
        "prefix": "Route::redirect",
        "body": "Route::redirect('${1:URI}', '${2:URI}', ${3:301});",
        "description": "a convenient shortcut for performing a simple redirect"
    },
    "Route-view": {
        "prefix": "Route::view",
        "body": "Route::view('${1:URI}', '${2:viewName}');",
        "description": "route only needs to return a view; you may provide an array of data to pass to the view as an optional third argument"
    }
}