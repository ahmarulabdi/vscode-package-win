{
	"ArrayHelper::filter": {
		"prefix": "ArrayHelper::filter",
		"body": "ArrayHelper::filter(\\$${1:array}, \\$${2:filters})$3",
		"description": "Filters array according to rules specified."
	},
	"ArrayHelper::getColumn()": {
		"prefix": "ArrayHelper::getColumn()",
		"body": "ArrayHelper::getColumn(\\$${1:array},\\$${2:name}, \\$${3:keepKeys = ${4|true, false|}})$5",
		"description": "Returns the values of a specified column in an array."
	},
	"ArrayHelper::getValue": {
		"prefix": "ArrayHelper::getValue",
		"body": "ArrayHelper::getValue(\\$${1:array},\\$${2:key}, \\$${3:default = ${4|true, false|}})$5",
		"description": "Retrieves the value of an array element or object property with the given key or property name."
	},
	"ArrayHelper::htmlDecode()": {
		"prefix": "ArrayHelper::htmlDecode()",
		"body": "ArrayHelper::htmlDecode(\\$${1:data}, \\$${2:valuesOnly = ${3|true, false|}})$4",
		"description": "Decodes HTML entities into the corresponding characters in an array of strings."
	},
	"ArrayHelper::htmlEncode()": {
		"prefix": "ArrayHelper::htmlEncode()",
		"body": "ArrayHelper::htmlEncode(\\$${1:data}, \\$${2:valuesOnly = ${3|true, false|}}, \\$${4:charset = ${5|null|}})$6",
		"description": "Encodes HTML entities into the corresponding characters in an array of strings."
	},
	"ArrayHelper::index()": {
		"prefix": "ArrayHelper::index()",
		"body": "ArrayHelper::index(\\$${1:array}, ${function($element){}})$3",
		"description": "Indexes and/or groups the array according to a specified key."
	},
	"ArrayHelper::isAssociative()": {
		"prefix": "ArrayHelper::isAssociative()",
		"body": "ArrayHelper::isAssociative(\\$${1:array}, \\$${2:allstring = ${3|true, false|}})$4",
		"description": "Returns a value indicating whether the given array is an associative array."
	},
	"ArrayHelper::isIn()": {
		"prefix": "ArrayHelper::isIn()",
		"body": "ArrayHelper::isIn(\\$${needle}, \\$${haystack}, \\$${strict = false})$3",
		"description": "Check whether an array or Traversable contains an element."
	},
	"ArrayHelper::isIndexed()": {
		"prefix": "ArrayHelper::isIndexed()",
		"body": "ArrayHelper::isIndexed(\\$${array}, \\$${consecutive = false})$3",
		"description": "Returns a value indicating whether the given array is an indexed array."
	},
	"ArrayHelper::isSubset()": {
		"prefix": "ArrayHelper::isSubset()",
		"body": "ArrayHelper::isSubset(\\$${needle}, \\$${haystack}, \\$${strict = false})$3",
		"description": "Checks whether an array or Traversable is a subset of another array or Traversable."
	},
	"ArrayHelper::isTraversable()": {
		"prefix": "ArrayHelper::isTraversable()",
		"body": "ArrayHelper::isTraversable(\\$${var})$3",
		"description": "Checks whether a variable is an array or Traversable."
	},
	"ArrayHelper::keyExists()": {
		"prefix": "ArrayHelper::keyExists()",
		"body": "ArrayHelper::keyExists(\\$${key}, \\$${array}, \\$${caseSensitive = true})$3",
		"description": "Checks if the given array contains the specified key."
	},
	"ArrayHelper::map()": {
		"prefix": "ArrayHelper::map()",
		"body": "ArrayHelper::map(\\$${array}, \\$${from},\\$${to}, \\$${group = null})$3",
		"description": "Builds a map (key-value pairs) from a multidimensional array or an array of objects."
	},
	"ArrayHelper::merge()": {
		"prefix": "ArrayHelper::merge()",
		"body": "ArrayHelper::merge(\\$${a}, \\$${b})$3",
		"description": "Merges two or more arrays into one recursively."
	},
	"ArrayHelper::multisort()": {
		"prefix": "ArrayHelper::multisort()",
		"body": "ArrayHelper::multisort(${&$array}, \\$${key}, \\$${direction = SORT_ASC}, \\$${sortFlf = SORT_REGULAR})$3",
		"description": "Sorts an array of objects or arrays (with the same structure) by one or several keys."
	},
	"ArrayHelper::remove()": {
		"prefix": "ArrayHelper::remove()",
		"body": "ArrayHelper::remove(${&$array}, \\$${key}, \\$${default = null})$3",
		"description": "Removes an item from an array and returns the value. If the key does not exist in the array, the default value will be returned instead."
	},
	"ArrayHelper::toArray()": {
		"prefix": "ArrayHelper::toArray()",
		"body": "ArrayHelper::toArray(\\$${options}, \\$${properties = []}, \\$${recursive = true})$3",
		"description": "Converts an object or an array of objects into an array."
	}
}